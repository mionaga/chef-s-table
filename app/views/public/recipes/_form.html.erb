 <%= form_with model: recipe, url: recipes_path, method: :post, remote: true do |f| %>


  <section class="description">
    <div class="description__inner">
      <div class="description__img-field">
        <div class="cooking-title">
          
          <p>料理完成写真</p>
          </div>
          <label class="img-file">
            <%= f.file_field :image, accept: "image/*" %>
            <% if @recipe.photo.attached? %>
              <%= image_tag @recipe.get_photo(200,200) %>
            <% end %>
          </label>

            <% unless current_page?(controller:"recipes", action: "new") %>
              <div class="description__remove-img-label">
                <%= f.check_box :remove_image %>
                <%= f.label :remove_image %>
              </div>
            <% end %>
      </div>
    </div>
    <div class="new-form">
        <div class="form-group">
          <%= f.label :"[タイトル]" %>
          <%= f.text_field :title, placeholder: "レシピタイトル（必須）",class: "form-control" %>
        </div>

        <div class="form-group">
          <%= f.label :"[料理説明]" %>
          <%= f.text_field :description, placeholder: "レシピのコツやポイントなどを記載してください（必須）",class: "form-control", rows: "4" %>
        </div>
        
         <div class="form-group">
          <%= f.label :"[タグ]" %>
          <%= f.collection_select :tag_ids, Tag.all, :id, :name, include_blank: "選択して下さい（必須）" %>
        </div>


        <div class="form-group">
          <%= f.label :"[所要時間]" %>
          <%= f.collection_select :cooking_time_id, CookingTime.all, :id, :time_in_minuites, include_blank: "選択して下さい" %>
        </div>

    </div>

  </section>


    <!--材料・分量フォームの隠し要素テンプレート：display: noneで表示はされない-->
    <div id="recipe_ingredient_fields-template" style="display: none;">
      <!--新しいrecipe_ingredientオブジェクトを作成、新たに追加されるフォームに一意なインデックスを付与-->
      <%= f.fields_for :recipe_ingredients, RecipeIngredient.new, child_index: "new_recipe_ingredient" do |recipe_ingredient_field| %>
        <%= render 'recipe_ingredient', f: recipe_ingredient_field %>
      <% end %>
    </div>

    <!--すでにdbに保存されているか、または新しくユーザが追加した「材料」に関する情報を表示するためのフォーム-->
    <%= f.fields_for :recipe_ingredients do |recipe_ingredient_field| %>
      <%= render 'recipe_ingredient', f: recipe_ingredient_field %>
    <% end %>
    <div id="recipe_ingredients"></div>


    <div>
      <!--材料、分量フォームを追加できる-->
      <button type="button" id="add-recipe_ingredient" class="btn mb-4", style="background-color: #234555; color: white;">材料を追加</button>
    </div>

    <!--作り方フォームの隠し要素テンプレート-->
    <div id="step_fields-template" style="display: none;">
      <!--新しいstepオブジェクトを作成-->
      <%= f.fields_for :steps, Step.new, child_index: "new_step" do |step_field| %>
        <%= render 'step', f: step_field %>
      <% end %>
    </div>

    <!--すでにdbに存在するか、または新しく追加された「作り方」手順を表示するフォーム-->
    <%= f.fields_for :steps do |step_field| %>
      <%= render 'step', f: step_field %>
    <% end %>
    <div id="steps"></div>
    <div>
      <!--作り方フォームを追加できる-->
      <button type="button" id="add-step" class="btn" style="background-color: #234555; color: white;">作り方を追加</button>
    </div>

    <%= f.submit "送信する", class: "btn btn-primary" %>





    <script data-turbolinks="false">
      // DOMContentLoaded文書のロード、DOMが完全に読み込まれた後に以下のコードが実行される
      document.addEventListener("DOMContentLoaded", function() {
      // add-recipe_ingredient IDを持つHTML要素のボタンを取得、「材料追加」ボタンにクリックイベントを追加
      document.getElementById("add-recipe_ingredient").addEventListener("click", function() {
        // recipe_ingredient_fields-templateというIDを持つdiv要素の内部HTMLを取得
        var content = document.getElementById("recipe_ingredient_fields-template").innerHTML;
        var uniqueId = new Date().getTime();
        // replace:テンプレート内のプレースホルダーを一位なIDで置き換え
        content = content.replace(/new_recipe_ingredient/g, uniqueId);
        // 新しい材料フォームをDOMに追加
        document.getElementById("recipe_ingredients").insertAdjacentHTML('beforeend', content);
      });
    });

    // 作り方フォームを追加
    document.addEventListener('DOMContentLoaded', function() {
      document.querySelector('#add-step').addEventListener('click', () => {
        let content = document.getElementById('step_fields-template').innerHTML;
        let uniqueId = new Date().getTime();
        content = content.replace(/new_step/g, uniqueId);
        document.getElementById('steps').insertAdjacentHTML('beforeend', content);
      });
    });

    </script>

    <% end %>